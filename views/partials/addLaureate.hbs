<h3>Ajouter/Modifier :</h3>
<p>Ajouter un lauréat pour une catégorie et une année donnée et selon son prénom, nom et motivation. Si le prénom et nom existe déjà il sera modifié avec la motivation entrée</p>
<div class="form-row">
    <div class="form-group col-md-6">
        <label for="category">Catégorie :</label>
        {{#unless category}}
            <fieldset disabled>
                <select id="category" class="form-control is-invalid">
                    <option value="-1">Aucune catégories trouvé</option>
                </select>
                <div class="invalid-feedback">
                    Aucune catégorie trouvée dans les données
                </div>
            </fieldset>
        {{/unless}}
        {{#if category}}
            <select name="category" id="category" class="form-control">
                <option value="-1">Sélectionnez une catégorie</option>
                {{#each category}}
                    <option value="{{this}}">{{this}}</option>
                {{/each}}
            </select>
        {{/if}}
        <div class="invalid-feedback">
            Veuillez sélectionner une catégorie
        </div>
        <div class="valid-feedback">
            C'est valide !
        </div>
    </div>
    <div class="form-group col-md-6">
        <label for="year">Année :</label>
        <input type="text" class="form-control" id="year" placeholder="Ex: 2021 (L'année doit déjà exister)">
        <div class="invalid-feedback" id="yearInvalid">
            Ce champ ne doit pas être vide
        </div>
        <div class="valid-feedback">
            C'est valide !
        </div>
    </div>
</div>
<div class="form-group">
    <label for="firstname">Prénom :</label>
    <input type="text" class="form-control" id="firstname" placeholder="Ex: Maxence">
    <div class="invalid-feedback">
        Ce champ ne doit pas être vide et doit fait plus de 3 caractères
    </div>
    <div class="valid-feedback">
        C'est valide !
    </div>
</div>
<div class="form-group">
    <label for="surname">Nom :</label>
    <input type="text" class="form-control" id="surname" placeholder="Ex: Paulin">
    <div class="invalid-feedback">
        Ce champ ne doit pas être vide et doit fait plus de 3 caractères
    </div>
    <div class="valid-feedback">
        C'est valide !
    </div>
</div>
<div class="form-group">
    <label for="motivation">Motivation :</label>
    <input type="text" class="form-control" id="motivation" placeholder="Ex: Pour avoir prouvé que la terre est plate.">
    <div class="invalid-feedback">
        Ce champ ne doit pas être vide
    </div>
    <div class="valid-feedback">
        C'est valide !
    </div>
</div>
<button type="submit" class="btn btn-primary" id="button">Ajouter/Modifier le lauréat</button>
<br>
<p id="resultGood" class="text-success">

</p>
<p id="resultError" class="text-danger">

</p>

<script>
    let select = document.getElementById("button");
    let resultGood = document.getElementById("resultGood");
    let resultError = document.getElementById("resultError");
    select.addEventListener("click", async () => {
        document.getElementById("yearInvalid").innerHTML = "Ce champ ne doit pas être vide";
        document.getElementById("category").classList.remove("is-invalid", "is-valid");
        document.getElementById("year").classList.remove("is-invalid", "is-valid");
        document.getElementById("firstname").classList.remove("is-invalid", "is-valid");
        document.getElementById("surname").classList.remove("is-invalid", "is-valid");
        document.getElementById("motivation").classList.remove("is-invalid", "is-valid");
        resultGood.innerHTML = "";
        resultError.innerHTML = "";
        let category = document.getElementById("category").value;
        let year = document.getElementById("year").value;
        let firstname = document.getElementById("firstname").value;
        let surname = document.getElementById("surname").value;
        let motivation = document.getElementById("motivation").value;
        let yearExist = [];
        let url = "http://localhost:3000/nobels/all"
        await fetch(url)
                .then((response) => {
                    return response.json();
                })
                .then((data) => {
                    yearExist = [];
                    data.data.result.forEach((element) => {
                        if (element.year) {
                            yearExist.push(element.year);
                        }
                    });
                });
        let verif = 0;
        if (category === "-1") {
            document.getElementById("category").classList.add("is-invalid");
            verif++;
        } else document.getElementById("category").classList.add("is-valid");
        if (year === "") {
            document.getElementById("year").classList.add("is-invalid");
            verif++;
        } else if (!yearExist.includes(year)) {
            document.getElementById("yearInvalid").innerHTML = `L'année n'existe pas essayez qu'elle soit comprise entre ${yearExist[yearExist.length - 1]} et ${yearExist[0]}`;
            document.getElementById("year").classList.add("is-invalid");
            verif++;
        } else document.getElementById("year").classList.add("is-valid");
        if (firstname.length <= 3) {
            document.getElementById("firstname").classList.add("is-invalid");
            verif++;
        } else document.getElementById("firstname").classList.add("is-valid");
        if (surname.length <= 3) {
            document.getElementById("surname").classList.add("is-invalid");
            verif++;
        } else document.getElementById("surname").classList.add("is-valid");
        if (motivation === "") {
            document.getElementById("motivation").classList.add("is-invalid");
            verif++;
        } else document.getElementById("motivation").classList.add("is-valid");
        if (verif === 0) {
            fetch(`http://localhost:3000/laureates/add?firstname=${firstname}&surname=${surname}&motivation=${motivation}&year=${year}&category=${category}`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
            }).then(response => {
                if (response.status === 200) {
                    response.json().then(data => {
                        console.log(data)
                        resultGood.innerHTML = `Le lauréat avec l'id ${data.data[0].id} de prénom et nom ${data.data[0].firstname} ${data.data[0].surname} a bien été ajouté/modifié avec la motivation ${data.data[0].motivation}`;
                    })
                } else {
                    response.json().then(data => {
                        console.log(data);
                        resultError.append(data.data);
                    });
                    resultError.innerHTML = "Erreur lors de l'ajout/modification du lauréat vérifiez bien que l'année existe déjà et que la catégorie pour celle-ci existe. <br>";
                }
            });
        }
    });
</script>